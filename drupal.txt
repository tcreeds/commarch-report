Drupal Commarch Report

IRC: freenode, #drupal, #drupal-contribute, #drupal-support, dozens of others
Source: https://git.drupal.org/project/drupal.git
Mailing List Archive: none
Documentation: 
Other channels: 
Website: https://www.drupal.org

A.  Open Source CMS, built to provide a way to manage content and build scalable websites without resorting to proprietary platforms like SharePoint.

B. The initial code was written in 2000, and it was released publicly in 2001. There are commits every day.

C. Patches can be downloaded on a case-by-case basis, as they take the form of git diffs. Patches to Drupal Core are controlled by the core team, and rolled out in releases, but it seems to be common for people to post their own patches, and for website maintainers to download and apply these patches directly.

D. Almost 2000 people have contributed to Drupal Core, and there are thousands of extensions.

E. GBAB/GBAT

F. Drupal scores a 45 on the Coefficient of Fail, but I highly doubt that number is accurate. I wasn't able to find definitive answers for each item, but the ones that I did find I'm certain of. In all likelihood, the number is higher.

G. Acquia employs developers to work on Drupal full-time, and is a for-profit company that supports the growth and use of Drupal.

H. Dries Buytaert is the founder of Acquia and the creator of Drupal, and currently oversees the project as a whole, but there is no single lead developer.

I. For the most part, developers don't touch all the different parts of Drupal. Drupal is a big project, so front-end and back-end aren't adequate labels for sections of development. There is a lot of specialized talent.

J. I didn't find any reports of major bugs, but I'm sure they're out there. There are often bugs in modules, and sometimes the modules are abandonded and the bugs are never fixed, but there are rarely notable breaking bugs in Drupal Core.

K. It's hard to find good data on the participation in the project over time. The repository viewer for Drupal core only shows stats for 2016, and that's been fairly consistent. There is a Github mirror, and while I don't know how accurate that information is, it does illustrate that Dries Buytart, the founder, has barely contributed at all the last year or so.

L. As there isn't currently a single lead developer, there is no single hit by a bus scenario. If Acquia went down, then the project would be in a much more unstable position, but it would still have a lot of support.

M. Since the project is so large, if the core team went down, the demand for skilled Drupal developers would quickly create a new elite. The number of people that rely on Drupal means that there is always a demand, and so there will always be a supply.

N. The project does have onboarding, for developers and end-users. There are different levels of detail based on the topic being discussed, as a site administrator has different concerns than a patch developer, but the onboarding material is fairly comprehensive.

O. Drupal has lots of documentation. There is a lot of official documentation on the website, and each module generally has at least some documentation. There are also a large number of community-driven educational efforts.

P. I would probably check out the IRC channels first. The number of channels devoted to IRC gives me the impression that the Drupal community uses IRC pretty heavily. I would probably go to Stack Overflow after that, as there are so many Drupal developers that I would probably get a response pretty quickly.

Q. Based on these answers, how would you describe the decision making structure/process of this group?  Is it hierarchical, consensus building, ruled by a small group, barely contained chaos, or ruled by a single or pair of individuals?

R. Much of the documentation, bug tracking, etc. is on Drupal's site, and it doesn't seem as polished as some other projects. Their end users are developers, so the process is simple but requires knowledge of the underlying systems, which makes sense. I think I could get used to it, but it seems to rely on developers with a strong desire to contribute, as opposed to making the process as easy as possible to entice new developers.